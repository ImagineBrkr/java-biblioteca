/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import java.util.*;
import datos.*;
import entidades.*;
import javax.swing.*;

/**
 *
 * @author Salvattore
 */
public class FormPrestarLibro extends javax.swing.JFrame {

    /**
     * Creates new form FormPrestarLibro
     */
    public FormPrestarLibro() {
        initComponents();
    }

    public FormPrestarLibro(Biblioteca biblioteca, JFrame panel, int pos) {
        initComponents();
        this.biblioteca = biblioteca;
        this.pos = pos;
        setLocationRelativeTo(panel);
    }

    public boolean ComprobarLibro(String codigo, boolean muestra) {
        int pos = biblioteca.getLibrosBiblioteca().buscarCodigo(codigo);
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "El libro ingresado no está registrado", "Error", 2);
            txtCodigoLibro.setText("");
            return false;
        } else {
            LibroBiblioteca libro = biblioteca.getLibrosBiblioteca().getLibro(pos);
            if (libro.getCantidad() <= 0) {
                if (muestra) {
                    JOptionPane.showMessageDialog(null, libro.toString(), "Muestra", 1);
                }
                JOptionPane.showMessageDialog(null, "El libro ingresado no tiene stock disponible.", "Error", 2);
                txtCodigoLibro.setText("");
                return false;
            } else {
                if (muestra) {
                    JOptionPane.showMessageDialog(null, libro.toString(), "Muestra", 1);
                }
                return true;
            }
        }
    }

    public boolean ComprobarPrestatario(String codigo, boolean muestra) {
        int pos = biblioteca.getListaPrestatarios().buscarCodigo(codigo);
        if (pos == -1) {

            JOptionPane.showMessageDialog(null, "El prestatario ingresado no está registrado", "Error", 2);
            txtCodigoPrestatario.setText("");
            return false;

        } else {

            Prestatario prestatario = biblioteca.getListaPrestatarios().getPrestatario(pos);
            if (biblioteca.ComprobarPrestatarioPlazo(codigo)) {
                if (prestatario.getPrestados() >= 2) {
                    if (muestra) {
                        JOptionPane.showMessageDialog(null, prestatario.toString(), "Muestra", 1);
                    }
                    JOptionPane.showMessageDialog(null, "El prestatario ingresado llegó al límite de libros prestados.", "Error", 2);
                    txtCodigoPrestatario.setText("");
                    return false;
                } else {
                    if (muestra) {
                        JOptionPane.showMessageDialog(null, prestatario.toString(), "Muestra", 1);
                    }
                    return true;
                }
            } else {
                JOptionPane.showMessageDialog(null, "El prestatario ingresado tiene al menos un libro prestado fuera del plazo.", "Error", 2);
                txtCodigoPrestatario.setText("");
                return false;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCodigoPrestatario = new javax.swing.JTextField();
        txtCodigoLibro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnPrestarLibro = new javax.swing.JButton();
        btnDevolverLibro = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        btnComprobarPrestatario = new javax.swing.JButton();
        btnComprobarLibro = new javax.swing.JButton();
        btnAplazar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Prestar libros");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Código del prestatario:");

        txtCodigoPrestatario.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtCodigoLibro.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Código del libro:");

        btnPrestarLibro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnPrestarLibro.setText("Prestar");
        btnPrestarLibro.setToolTipText("");
        btnPrestarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestarLibroActionPerformed(evt);
            }
        });

        btnDevolverLibro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnDevolverLibro.setText("Devolver");
        btnDevolverLibro.setToolTipText("");
        btnDevolverLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverLibroActionPerformed(evt);
            }
        });

        btnVolver.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.setToolTipText("");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnComprobarPrestatario.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnComprobarPrestatario.setText("Comprobar estado");
        btnComprobarPrestatario.setToolTipText("");
        btnComprobarPrestatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprobarPrestatarioActionPerformed(evt);
            }
        });

        btnComprobarLibro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnComprobarLibro.setText("Comprobar estado");
        btnComprobarLibro.setToolTipText("");
        btnComprobarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprobarLibroActionPerformed(evt);
            }
        });

        btnAplazar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAplazar.setText("Aplazar");
        btnAplazar.setToolTipText("");
        btnAplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplazarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCodigoLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(78, 78, 78)
                                .addComponent(txtCodigoPrestatario, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnComprobarPrestatario)
                            .addComponent(btnComprobarLibro)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(btnPrestarLibro)
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDevolverLibro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(100, 100, 100)
                        .addComponent(btnAplazar)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigoPrestatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnComprobarPrestatario))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigoLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnComprobarLibro))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrestarLibro)
                    .addComponent(btnDevolverLibro)
                    .addComponent(btnAplazar))
                .addGap(27, 27, 27)
                .addComponent(btnVolver)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        new FormPresBibliotecario(biblioteca, this, pos).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnComprobarPrestatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprobarPrestatarioActionPerformed
        String codigo = txtCodigoPrestatario.getText().trim();
        if (!codigo.equals("")) {
            ComprobarPrestatario(codigo, true);
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un valor.", "Error", 2);
        }
    }//GEN-LAST:event_btnComprobarPrestatarioActionPerformed

    private void btnComprobarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprobarLibroActionPerformed
        String codigo = txtCodigoLibro.getText().trim();
        if (!codigo.equals("")) {
            ComprobarLibro(codigo, true);
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un valor.", "Error", 2);
        }
    }//GEN-LAST:event_btnComprobarLibroActionPerformed

    private void btnPrestarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestarLibroActionPerformed
        String codigoPrestatario = txtCodigoPrestatario.getText().trim(), codigoLibro = txtCodigoLibro.getText().trim();
        if (!codigoLibro.equals("") && !codigoPrestatario.equals("")) {
            if (ComprobarPrestatario(codigoPrestatario, false) && ComprobarLibro(codigoLibro, false)) {

                GregorianCalendar hoy = new GregorianCalendar();
                LibroPrestado libro = new LibroPrestado(biblioteca.getListaBibliotecarios().getBibliotecario(pos).getCodigo(),
                        codigoPrestatario, codigoLibro, new Fecha(hoy.get(Calendar.DAY_OF_MONTH), hoy.get(Calendar.MONTH) + 1, hoy.get(Calendar.YEAR)));
                biblioteca.AgregarLibroPrestado(libro);
                biblioteca.PrestarLibro(codigoLibro, codigoPrestatario);
                txtCodigoLibro.setText("");
                txtCodigoPrestatario.setText("");
                JOptionPane.showMessageDialog(null, "Libro prestado con éxito.", "Muestra", 1);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un valor.", "Error", 2);
        }
    }//GEN-LAST:event_btnPrestarLibroActionPerformed

    private void btnDevolverLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverLibroActionPerformed
        String codigoPrestatario = txtCodigoPrestatario.getText().trim(), codigoLibro = txtCodigoLibro.getText().trim();
        if (!codigoLibro.equals("") && !codigoPrestatario.equals("")) {

            int pos1 = biblioteca.getListaLibrosPrestados().buscarCodigo1(codigoPrestatario), pos2 = biblioteca.getListaLibrosPrestados().buscarCodigo2(codigoPrestatario);
            if (pos1 != -1) {
                LibroPrestado libro = biblioteca.getListaLibrosPrestados().getLibro(pos1);
                if (libro.getCodigoLibro().equals(codigoLibro)) {

                    biblioteca.DevolverLibro(codigoLibro, codigoPrestatario, pos1);
                    JOptionPane.showMessageDialog(null, "Libro devuelto con éxito.", "Muestra", 1);
                    if (!libro.getDentroDelPlazo()) {
                        JOptionPane.showMessageDialog(null, "Se le ha cobrado una multa por salirse del plazo.", "Aviso", 2);
                    }

                } else if (pos2 != -1 && pos2 != pos1) {
                    libro = biblioteca.getListaLibrosPrestados().getLibro(pos2);
                    if (libro.getCodigoLibro().equals(codigoLibro)) {

                        biblioteca.DevolverLibro(codigoLibro, codigoPrestatario, pos2);
                        JOptionPane.showMessageDialog(null, "Libro devuelto con éxito.", "Muestra", 1);
                        if (!libro.getDentroDelPlazo()) {
                            JOptionPane.showMessageDialog(null, "Se le ha cobrado una multa por salirse del plazo.", "Aviso", 2);
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "El prestatario ingresado no ha prestado el libro ingresado.", "Error", 2);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El prestatario ingresado no ha prestado el libro ingresado.", "Error", 2);
                }
            } else {
                JOptionPane.showMessageDialog(null, "El prestatario ingresado no tiene libros prestados.", "Error", 2);

            }
            txtCodigoLibro.setText("");
            txtCodigoPrestatario.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un valor.", "Error", 2);
        }
    }//GEN-LAST:event_btnDevolverLibroActionPerformed

    private void btnAplazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplazarActionPerformed
        String codigoPrestatario = txtCodigoPrestatario.getText().trim(), codigoLibro = txtCodigoLibro.getText().trim();
        if (!codigoLibro.equals("") && !codigoPrestatario.equals("")) {

            int pos1 = biblioteca.getListaLibrosPrestados().buscarCodigo1(codigoPrestatario), pos2 = biblioteca.getListaLibrosPrestados().buscarCodigo2(codigoPrestatario);
            if (pos1 != -1) {
                LibroPrestado libro = biblioteca.getListaLibrosPrestados().getLibro(pos1);
                if (libro.getCodigoLibro().equals(codigoLibro)) {
                    if (libro.getDentroDelPlazo()) {
                        biblioteca.Aplazar(pos1);
                        txtCodigoLibro.setText("");
                        txtCodigoPrestatario.setText("");
                        JOptionPane.showMessageDialog(null, "Libro aplazado con éxito.", "Muestra", 1);
                    } else {
                        JOptionPane.showMessageDialog(null, "El libro prestado ya está fuera del plazo.", "Error", 2);
                    }
                } else if (pos2 != -1 && pos2 != pos1) {
                    libro = biblioteca.getListaLibrosPrestados().getLibro(pos2);
                    if (libro.getCodigoLibro().equals(codigoLibro)) {
                        if (libro.getDentroDelPlazo()) {
                            biblioteca.Aplazar(pos2);
                            JOptionPane.showMessageDialog(null, "Libro aplazado con éxito.", "Muestra", 1);
                        } else {
                            JOptionPane.showMessageDialog(null, "El libro prestado ya está fuera del plazo.", "Error", 2);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El prestatario ingresado no ha prestado el libro ingresado.", "Error", 2);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El prestatario ingresado no ha prestado el libro ingresado.", "Error", 2);
                }
            } else {
                JOptionPane.showMessageDialog(null, "El prestatario ingresado no tiene libros prestados.", "Error", 2);
            }
            txtCodigoLibro.setText("");
            txtCodigoPrestatario.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un valor.", "Error", 2);
        }


    }//GEN-LAST:event_btnAplazarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FormPrestarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FormPrestarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FormPrestarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FormPrestarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FormPrestarLibro().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAplazar;
    private javax.swing.JButton btnComprobarLibro;
    private javax.swing.JButton btnComprobarPrestatario;
    private javax.swing.JButton btnDevolverLibro;
    private javax.swing.JButton btnPrestarLibro;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtCodigoLibro;
    private javax.swing.JTextField txtCodigoPrestatario;
    // End of variables declaration//GEN-END:variables
    private Biblioteca biblioteca;
    private int pos;
}
